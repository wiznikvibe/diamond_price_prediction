import pandas as pd

def treat_outliers(df, columns, method='capping', multiplier=1.5):
    """
    Treats outliers in specified columns of a DataFrame.

    Parameters:
        df (pd.DataFrame): Input DataFrame.
        columns (list): List of column names with outliers to be treated.
        method (str): Method for treating outliers, 'capping' by default.
                      Other options can be added based on the requirements.
        multiplier (float): Multiplier for capping outliers, 1.5 by default.

    Returns:
        pd.DataFrame: DataFrame with treated outliers.
    """
    df_treated = df.copy()

    for col in columns:
        if method == 'capping':
            # Calculate the IQR for the column
            q1 = df_treated[col].quantile(0.25)
            q3 = df_treated[col].quantile(0.75)
            iqr = q3 - q1

            # Define upper and lower bounds for capping
            lower_bound = q1 - multiplier * iqr
            upper_bound = q3 + multiplier * iqr

            # Cap the outliers
            df_treated[col] = df_treated[col].apply(lambda x: lower_bound if x < lower_bound else (upper_bound if x > upper_bound else x))

    return df_treated

# Example usage
# Assuming 'df' is your DataFrame and 'columns_to_treat' is a list of columns with outliers
df_treated = treat_outliers(df, columns_to_treat)
